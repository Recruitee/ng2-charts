{"version":3,"file":"ng2-charts.mjs","sources":["../../../projects/ng2-charts/src/lib/default-colors.ts","../../../projects/ng2-charts/src/lib/get-colors.ts","../../../projects/ng2-charts/src/lib/theme.service.ts","../../../projects/ng2-charts/src/lib/base-chart.directive.ts","../../../projects/ng2-charts/src/lib/charts.module.ts","../../../projects/ng2-charts/src/public_api.ts","../../../projects/ng2-charts/src/ng2-charts.ts"],"sourcesContent":["export const defaultColors: Array<number[]> = [\n  [255, 99, 132],\n  [54, 162, 235],\n  [255, 206, 86],\n  [231, 233, 237],\n  [75, 192, 192],\n  [151, 187, 205],\n  [220, 220, 220],\n  [247, 70, 74],\n  [70, 191, 189],\n  [253, 180, 92],\n  [148, 159, 177],\n  [77, 83, 96]\n];\n","import { Color } from './color';\nimport { Colors } from './colors';\nimport { defaultColors } from './default-colors';\n\n/**\n * Generate colors by chart type\n */\nexport function getColors(chartType: string, index: number, count: number): Color {\n  if (chartType === 'pie' || chartType === 'doughnut') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'polarArea') {\n    return formatPolarAreaColors(generateColors(count));\n  }\n\n  if (chartType === 'line' || chartType === 'radar') {\n    return formatLineColor(generateColor(index));\n  }\n\n  if (chartType === 'bar' || chartType === 'horizontalBar') {\n    return formatBarColor(generateColor(index));\n  }\n\n  if (chartType === 'bubble') {\n    return formatPieColors(generateColors(count));\n  }\n\n  if (chartType === 'scatter') {\n    return formatPieColors(generateColors(count));\n  }\n\n  throw new Error(`getColors - Unsupported chart type ${chartType}`);\n}\n\nfunction rgba(colour: Array<number>, alpha: number): string {\n  return 'rgba(' + colour.concat(alpha).join(',') + ')';\n}\n\nfunction getRandomInt(min: number, max: number): number {\n  return Math.floor(Math.random() * (max - min + 1)) + min;\n}\n\nfunction formatLineColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.4),\n    borderColor: rgba(colors, 1),\n    pointBackgroundColor: rgba(colors, 1),\n    pointBorderColor: '#fff',\n    pointHoverBackgroundColor: '#fff',\n    pointHoverBorderColor: rgba(colors, 0.8)\n  };\n}\n\nfunction formatBarColor(colors: Array<number>): Color {\n  return {\n    backgroundColor: rgba(colors, 0.6),\n    borderColor: rgba(colors, 1),\n    hoverBackgroundColor: rgba(colors, 0.8),\n    hoverBorderColor: rgba(colors, 1)\n  };\n}\n\nfunction formatPieColors(colors: Array<number[]>): Colors {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map(() => '#fff'),\n    pointBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointBorderColor: colors.map(() => '#fff'),\n    pointHoverBackgroundColor: colors.map((color: number[]) => rgba(color, 1)),\n    pointHoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction formatPolarAreaColors(colors: Array<number[]>): Color {\n  return {\n    backgroundColor: colors.map((color: number[]) => rgba(color, 0.6)),\n    borderColor: colors.map((color: number[]) => rgba(color, 1)),\n    hoverBackgroundColor: colors.map((color: number[]) => rgba(color, 0.8)),\n    hoverBorderColor: colors.map((color: number[]) => rgba(color, 1))\n  };\n}\n\nfunction getRandomColor(): number[] {\n  return [getRandomInt(0, 255), getRandomInt(0, 255), getRandomInt(0, 255)];\n}\n\n/**\n * Generate colors for line|bar charts\n */\nfunction generateColor(index: number): number[] {\n  return defaultColors[index] || getRandomColor();\n}\n\n/**\n * Generate colors for pie|doughnut charts\n */\nfunction generateColors(count: number): Array<number[]> {\n  const colorsArr: Array<number[]> = new Array(count);\n  for (let i = 0; i < count; i++) {\n    colorsArr[i] = defaultColors[i] || getRandomColor();\n  }\n  return colorsArr;\n}\n","import { Injectable } from '@angular/core';\nimport { BehaviorSubject } from 'rxjs';\nimport { ChartOptions } from 'chart.js';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class ThemeService {\n  private pColorschemesOptions: ChartOptions = {};\n  public colorschemesOptions = new BehaviorSubject<ChartOptions>({});\n\n  constructor() { }\n\n  setColorschemesOptions(options: ChartOptions) {\n    this.pColorschemesOptions = options;\n    this.colorschemesOptions.next(options);\n  }\n\n  getColorschemesOptions() {\n    return this.pColorschemesOptions;\n  }\n}\n","import {\n  Directive,\n  OnDestroy,\n  OnChanges,\n  OnInit,\n  Input,\n  Output,\n  EventEmitter,\n  ElementRef,\n  SimpleChanges,\n  DoCheck,\n} from '@angular/core';\nimport * as chartJs from 'chart.js';\nimport { getColors } from './get-colors';\nimport { Color } from './color';\nimport { ThemeService } from './theme.service';\nimport { Subscription } from 'rxjs';\nimport * as _ from 'lodash';\n\nexport type SingleDataSet = (number[] | chartJs.ChartPoint[]);\nexport type MultiDataSet = (number[] | chartJs.ChartPoint[])[];\nexport type SingleOrMultiDataSet = SingleDataSet | MultiDataSet;\n\nexport type PluginServiceGlobalRegistrationAndOptions = chartJs.PluginServiceGlobalRegistration & chartJs.PluginServiceRegistrationOptions;\nexport type SingleLineLabel = string;\nexport type MultiLineLabel = string[];\nexport type Label = SingleLineLabel | MultiLineLabel;\n\ninterface OldState {\n  dataExists: boolean;\n  dataLength: number;\n  datasetsExists: boolean;\n  datasetsLength: number;\n  datasetsDataObjects: any[];\n  datasetsDataLengths: number[];\n  colorsExists: boolean;\n  colors: Color[];\n  labelsExist: boolean;\n  labels: Label[];\n}\n\nenum UpdateType {\n  Default,\n  Update,\n  Refresh\n}\n\n@Directive({\n  // tslint:disable-next-line:directive-selector\n  selector: 'canvas[baseChart]',\n  exportAs: 'base-chart'\n})\nexport class BaseChartDirective implements OnDestroy, OnChanges, OnInit, OnDestroy, DoCheck {\n  @Input() public data: SingleOrMultiDataSet;\n  @Input() public datasets: chartJs.ChartDataSets[];\n  @Input() public labels: Label[];\n  @Input() public options: chartJs.ChartOptions = {};\n  @Input() public chartType: chartJs.ChartType;\n  @Input() public colors: Color[];\n  @Input() public legend: boolean;\n  @Input() public plugins: PluginServiceGlobalRegistrationAndOptions[];\n\n  @Output() public chartClick: EventEmitter<{ event?: MouseEvent, active?: {}[] }> = new EventEmitter();\n  @Output() public chartHover: EventEmitter<{ event: MouseEvent, active: {}[] }> = new EventEmitter();\n\n  public ctx: string;\n  public chart: Chart;\n\n  private old: OldState = {\n    dataExists: false,\n    dataLength: 0,\n    datasetsExists: false,\n    datasetsLength: 0,\n    datasetsDataObjects: [],\n    datasetsDataLengths: [],\n    colorsExists: false,\n    colors: [],\n    labelsExist: false,\n    labels: [],\n  };\n\n  private subs: Subscription[] = [];\n\n  /**\n   * Register a plugin.\n   */\n  public static registerPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\n    chartJs.Chart.plugins.register(plugin);\n  }\n\n  public static unregisterPlugin(plugin: PluginServiceGlobalRegistrationAndOptions) {\n    chartJs.Chart.plugins.unregister(plugin);\n  }\n\n  public constructor(\n    private element: ElementRef,\n    private themeService: ThemeService,\n  ) { }\n\n  public ngOnInit() {\n    this.ctx = this.element.nativeElement.getContext('2d');\n    this.refresh();\n    this.subs.push(this.themeService.colorschemesOptions.subscribe(r => this.themeChanged(r)));\n  }\n\n  private themeChanged(options: {}) {\n    this.refresh();\n  }\n\n  ngDoCheck(): void {\n    if (!this.chart) {\n      return;\n    }\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    if (!!this.data !== this.old.dataExists) {\n      this.propagateDataToDatasets(this.data);\n\n      this.old.dataExists = !!this.data;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.data && this.data.length !== this.old.dataLength) {\n      this.old.dataLength = this.data && this.data.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.datasets !== this.old.datasetsExists) {\n      this.old.datasetsExists = !!this.datasets;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.length !== this.old.datasetsLength) {\n      this.old.datasetsLength = this.datasets && this.datasets.length || 0;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data !== this.old.datasetsDataObjects[i]).length) {\n      this.old.datasetsDataObjects = this.datasets.map(x => x.data);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.datasets && this.datasets.filter((x, i) => x.data.length !== this.old.datasetsDataLengths[i]).length) {\n      this.old.datasetsDataLengths = this.datasets.map(x => x.data.length);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.colors !== this.old.colorsExists) {\n      this.old.colorsExists = !!this.colors;\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    // This smells of inefficiency, might need to revisit this\n    if (this.colors && this.colors.filter((x, i) => !this.colorsEqual(x, this.old.colors[i])).length) {\n      this.old.colors = this.colors.map(x => this.copyColor(x));\n\n      this.updateColors();\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (!!this.labels !== this.old.labelsExist) {\n      this.old.labelsExist = !!this.labels;\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (this.labels && this.labels.filter((x, i) => !this.labelsEqual(x, this.old.labels[i])).length) {\n      this.old.labels = this.labels.map(x => this.copyLabel(x));\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Default:\n        break;\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n        this.refresh();\n        break;\n    }\n  }\n\n  copyLabel(a: Label): Label {\n    if (Array.isArray(a)) {\n      return [...a];\n    }\n    return a;\n  }\n\n  labelsEqual(a: Label, b: Label) {\n    return true\n      && Array.isArray(a) === Array.isArray(b)\n      && (Array.isArray(a) || a === b)\n      && (!Array.isArray(a) || a.length === b.length)\n      && (!Array.isArray(a) || a.filter((x, i) => x !== b[i]).length === 0)\n      ;\n  }\n\n  copyColor(a: Color): Color {\n    const rc: Color = {\n      backgroundColor: a.backgroundColor,\n      borderWidth: a.borderWidth,\n      borderColor: a.borderColor,\n      borderCapStyle: a.borderCapStyle,\n      borderDash: a.borderDash,\n      borderDashOffset: a.borderDashOffset,\n      borderJoinStyle: a.borderJoinStyle,\n      pointBorderColor: a.pointBorderColor,\n      pointBackgroundColor: a.pointBackgroundColor,\n      pointBorderWidth: a.pointBorderWidth,\n      pointRadius: a.pointRadius,\n      pointHoverRadius: a.pointHoverRadius,\n      pointHitRadius: a.pointHitRadius,\n      pointHoverBackgroundColor: a.pointHoverBackgroundColor,\n      pointHoverBorderColor: a.pointHoverBorderColor,\n      pointHoverBorderWidth: a.pointHoverBorderWidth,\n      pointStyle: a.pointStyle,\n      hoverBackgroundColor: a.hoverBackgroundColor,\n      hoverBorderColor: a.hoverBorderColor,\n      hoverBorderWidth: a.hoverBorderWidth,\n    };\n\n    return rc;\n  }\n\n  colorsEqual(a: Color, b: Color) {\n    if (!a !== !b) {\n      return false;\n    }\n    return !a || true\n      && (a.backgroundColor === b.backgroundColor)\n      && (a.borderWidth === b.borderWidth)\n      && (a.borderColor === b.borderColor)\n      && (a.borderCapStyle === b.borderCapStyle)\n      && (a.borderDash === b.borderDash)\n      && (a.borderDashOffset === b.borderDashOffset)\n      && (a.borderJoinStyle === b.borderJoinStyle)\n      && (a.pointBorderColor === b.pointBorderColor)\n      && (a.pointBackgroundColor === b.pointBackgroundColor)\n      && (a.pointBorderWidth === b.pointBorderWidth)\n      && (a.pointRadius === b.pointRadius)\n      && (a.pointHoverRadius === b.pointHoverRadius)\n      && (a.pointHitRadius === b.pointHitRadius)\n      && (a.pointHoverBackgroundColor === b.pointHoverBackgroundColor)\n      && (a.pointHoverBorderColor === b.pointHoverBorderColor)\n      && (a.pointHoverBorderWidth === b.pointHoverBorderWidth)\n      && (a.pointStyle === b.pointStyle)\n      && (a.hoverBackgroundColor === b.hoverBackgroundColor)\n      && (a.hoverBorderColor === b.hoverBorderColor)\n      && (a.hoverBorderWidth === b.hoverBorderWidth)\n      ;\n  }\n\n  updateColors() {\n    this.datasets.forEach((elm, index) => {\n      if (this.colors && this.colors[index]) {\n        Object.assign(elm, this.colors[index]);\n      } else {\n        Object.assign(elm, getColors(this.chartType, index, elm.data.length), { ...elm });\n      }\n    });\n  }\n\n  public ngOnChanges(changes: SimpleChanges) {\n    let updateRequired = UpdateType.Default;\n    const wantUpdate = (x: UpdateType) => {\n      updateRequired = x > updateRequired ? x : updateRequired;\n    };\n\n    // Check if the changes are in the data or datasets or labels or legend\n\n    if (changes.hasOwnProperty('data') && changes.data.currentValue) {\n      this.propagateDataToDatasets(changes.data.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('datasets') && changes.datasets.currentValue) {\n      this.propagateDatasetsToData(changes.datasets.currentValue);\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('labels')) {\n      if (this.chart) {\n        this.chart.data.labels = changes.labels.currentValue;\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('legend')) {\n      if (this.chart) {\n        this.chart.config.options.legend.display = changes.legend.currentValue;\n        this.chart.generateLegend();\n      }\n\n      wantUpdate(UpdateType.Update);\n    }\n\n    if (changes.hasOwnProperty('options')) {\n      wantUpdate(UpdateType.Refresh);\n    }\n\n    switch (updateRequired as UpdateType) {\n      case UpdateType.Update:\n        this.update();\n        break;\n      case UpdateType.Refresh:\n      case UpdateType.Default:\n        this.refresh();\n        break;\n    }\n  }\n\n  public ngOnDestroy() {\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    this.subs.forEach(x => x.unsubscribe());\n  }\n\n  public update(duration?: any, lazy?: any) {\n    if (this.chart) {\n      return this.chart.update(duration, lazy);\n    }\n  }\n\n  public hideDataset(index: number, hidden: boolean) {\n    this.chart.getDatasetMeta(index).hidden = hidden;\n    this.chart.update();\n  }\n\n  public isDatasetHidden(index: number): boolean {\n    return this.chart.getDatasetMeta(index).hidden;\n  }\n\n  public toBase64Image(): string {\n    return this.chart.toBase64Image();\n  }\n\n  public getChartConfiguration(): chartJs.ChartConfiguration {\n    const datasets = this.getDatasets();\n\n    const options = Object.assign({}, this.options);\n    if (this.legend === false) {\n      options.legend = { display: false };\n    }\n    // hook for onHover and onClick events\n    options.hover = options.hover || {};\n    if (!options.hover.onHover) {\n      options.hover.onHover = (event: MouseEvent, active: {}[]) => {\n        if (active && !active.length) {\n          return;\n        }\n        this.chartHover.emit({ event, active });\n      };\n    }\n\n    if (!options.onClick) {\n      options.onClick = (event?: MouseEvent, active?: {}[]) => {\n        this.chartClick.emit({ event, active });\n      };\n    }\n\n    const mergedOptions = this.smartMerge(options, this.themeService.getColorschemesOptions());\n\n    const chartConfig: chartJs.ChartConfiguration = {\n      type: this.chartType,\n      data: {\n        labels: this.labels || [],\n        datasets\n      },\n      plugins: this.plugins,\n      options: mergedOptions,\n    };\n\n    return chartConfig;\n  }\n\n  public getChartBuilder(ctx: string/*, data:any[], options:any*/): Chart {\n    const chartConfig = this.getChartConfiguration();\n    return new chartJs.Chart(ctx, chartConfig);\n  }\n\n  smartMerge(options: any, overrides: any, level: number = 0): any {\n    if (level === 0) {\n      options = _.cloneDeep(options);\n    }\n    const keysToUpdate = Object.keys(overrides);\n    keysToUpdate.forEach(key => {\n      if (Array.isArray(overrides[key])) {\n        const arrayElements = options[key];\n        if (arrayElements) {\n          arrayElements.forEach(r => {\n            this.smartMerge(r, overrides[key][0], level + 1);\n          });\n        }\n      } else if (typeof (overrides[key]) === 'object') {\n        if (!(key in options)) {\n          options[key] = {};\n        }\n        this.smartMerge(options[key], overrides[key], level + 1);\n      } else {\n        options[key] = overrides[key];\n      }\n    });\n    if (level === 0) {\n      return options;\n    }\n  }\n\n  private isMultiLineLabel(label: Label): label is MultiLineLabel {\n    return Array.isArray(label);\n  }\n\n  private joinLabel(label: Label): string {\n    if (!label) {\n      return null;\n    }\n    if (this.isMultiLineLabel(label)) {\n      return label.join(' ');\n    } else {\n      return label;\n    }\n  }\n\n  private propagateDatasetsToData(datasets: chartJs.ChartDataSets[]) {\n    this.data = this.datasets.map(r => r.data);\n    if (this.chart) {\n      this.chart.data.datasets = datasets;\n    }\n    this.updateColors();\n  }\n\n  private propagateDataToDatasets(newDataValues: SingleOrMultiDataSet): void {\n    if (this.isMultiDataSet(newDataValues)) {\n      if (this.datasets && newDataValues.length === this.datasets.length) {\n        this.datasets.forEach((dataset, i: number) => {\n          dataset.data = newDataValues[i];\n        });\n      } else {\n        this.datasets = newDataValues.map((data: number[], index: number) => {\n          return { data, label: this.joinLabel(this.labels[index]) || `Label ${index}` };\n        });\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      }\n    } else {\n      if (!this.datasets) {\n        this.datasets = [{ data: newDataValues }];\n        if (this.chart) {\n          this.chart.data.datasets = this.datasets;\n        }\n      } else {\n        this.datasets[0].data = newDataValues;\n        this.datasets.splice(1); // Remove all elements but the first\n      }\n    }\n    this.updateColors();\n  }\n\n  private isMultiDataSet(data: SingleOrMultiDataSet): data is MultiDataSet {\n    return Array.isArray(data[0]);\n  }\n\n  private getDatasets() {\n    if (!this.datasets && !this.data) {\n      throw new Error(`ng-charts configuration error, data or datasets field are required to render chart ${this.chartType}`);\n    }\n\n    // If `datasets` is defined, use it over the `data` property.\n    if (this.datasets) {\n      this.propagateDatasetsToData(this.datasets);\n      return this.datasets;\n    }\n\n    if (this.data) {\n      this.propagateDataToDatasets(this.data);\n      return this.datasets;\n    }\n  }\n\n  private refresh() {\n    // if (this.options && this.options.responsive) {\n    //   setTimeout(() => this.refresh(), 50);\n    // }\n\n    // todo: remove this line, it is producing flickering\n    if (this.chart) {\n      this.chart.destroy();\n      this.chart = void 0;\n    }\n    if (this.ctx) {\n      this.chart = this.getChartBuilder(this.ctx/*, data, this.options*/);\n    }\n  }\n}\n","import { NgModule } from '@angular/core';\nimport { BaseChartDirective } from './base-chart.directive';\n\n@NgModule({\n  declarations: [\n    BaseChartDirective\n  ],\n  imports: [\n  ],\n  exports: [\n    BaseChartDirective\n  ]\n})\nexport class ChartsModule { }\n","/*\n * Public API Surface of ng2-charts\n */\n\nexport * from './lib/charts.module';\nexport * from './lib/base-chart.directive';\nexport * from './lib/color';\nexport * from './lib/colors';\nexport * from './lib/default-colors';\nexport * from './lib/theme.service';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public_api';\n"],"names":["i1.ThemeService"],"mappings":";;;;;;AAAa,MAAA,aAAa,GAAoB;AAC5C,IAAA,CAAC,GAAG,EAAE,EAAE,EAAE,GAAG,CAAC;AACd,IAAA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AACd,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;AACd,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AACd,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,GAAG,EAAE,EAAE,EAAE,EAAE,CAAC;AACb,IAAA,CAAC,EAAE,EAAE,GAAG,EAAE,GAAG,CAAC;AACd,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,EAAE,CAAC;AACd,IAAA,CAAC,GAAG,EAAE,GAAG,EAAE,GAAG,CAAC;AACf,IAAA,CAAC,EAAE,EAAE,EAAE,EAAE,EAAE,CAAC;;;ACRd;;AAEG;SACa,SAAS,CAAC,SAAiB,EAAE,KAAa,EAAE,KAAa,EAAA;AACvE,IAAA,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,UAAU,EAAE;AACnD,QAAA,OAAO,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,KAAA;IAED,IAAI,SAAS,KAAK,WAAW,EAAE;AAC7B,QAAA,OAAO,qBAAqB,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AACrD,KAAA;AAED,IAAA,IAAI,SAAS,KAAK,MAAM,IAAI,SAAS,KAAK,OAAO,EAAE;AACjD,QAAA,OAAO,eAAe,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC9C,KAAA;AAED,IAAA,IAAI,SAAS,KAAK,KAAK,IAAI,SAAS,KAAK,eAAe,EAAE;AACxD,QAAA,OAAO,cAAc,CAAC,aAAa,CAAC,KAAK,CAAC,CAAC,CAAC;AAC7C,KAAA;IAED,IAAI,SAAS,KAAK,QAAQ,EAAE;AAC1B,QAAA,OAAO,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,KAAA;IAED,IAAI,SAAS,KAAK,SAAS,EAAE;AAC3B,QAAA,OAAO,eAAe,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,CAAC;AAC/C,KAAA;AAED,IAAA,MAAM,IAAI,KAAK,CAAC,sCAAsC,SAAS,CAAA,CAAE,CAAC,CAAC;AACrE,CAAC;AAED,SAAS,IAAI,CAAC,MAAqB,EAAE,KAAa,EAAA;AAChD,IAAA,OAAO,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,GAAG,CAAC,GAAG,GAAG,CAAC;AACxD,CAAC;AAED,SAAS,YAAY,CAAC,GAAW,EAAE,GAAW,EAAA;AAC5C,IAAA,OAAO,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,EAAE,IAAI,GAAG,GAAG,GAAG,GAAG,CAAC,CAAC,CAAC,GAAG,GAAG,CAAC;AAC3D,CAAC;AAED,SAAS,eAAe,CAAC,MAAqB,EAAA;IAC5C,OAAO;AACL,QAAA,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;AAClC,QAAA,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC5B,QAAA,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AACrC,QAAA,gBAAgB,EAAE,MAAM;AACxB,QAAA,yBAAyB,EAAE,MAAM;AACjC,QAAA,qBAAqB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;KACzC,CAAC;AACJ,CAAC;AAED,SAAS,cAAc,CAAC,MAAqB,EAAA;IAC3C,OAAO;AACL,QAAA,eAAe,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;AAClC,QAAA,WAAW,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;AAC5B,QAAA,oBAAoB,EAAE,IAAI,CAAC,MAAM,EAAE,GAAG,CAAC;AACvC,QAAA,gBAAgB,EAAE,IAAI,CAAC,MAAM,EAAE,CAAC,CAAC;KAClC,CAAC;AACJ,CAAC;AAED,SAAS,eAAe,CAAC,MAAuB,EAAA;IAC9C,OAAO;AACL,QAAA,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;QAClE,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,MAAM,CAAC;AACrC,QAAA,oBAAoB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;QACrE,gBAAgB,EAAE,MAAM,CAAC,GAAG,CAAC,MAAM,MAAM,CAAC;AAC1C,QAAA,yBAAyB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC1E,QAAA,qBAAqB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KACvE,CAAC;AACJ,CAAC;AAED,SAAS,qBAAqB,CAAC,MAAuB,EAAA;IACpD,OAAO;AACL,QAAA,eAAe,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AAClE,QAAA,WAAW,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;AAC5D,QAAA,oBAAoB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,GAAG,CAAC,CAAC;AACvE,QAAA,gBAAgB,EAAE,MAAM,CAAC,GAAG,CAAC,CAAC,KAAe,KAAK,IAAI,CAAC,KAAK,EAAE,CAAC,CAAC,CAAC;KAClE,CAAC;AACJ,CAAC;AAED,SAAS,cAAc,GAAA;IACrB,OAAO,CAAC,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,EAAE,YAAY,CAAC,CAAC,EAAE,GAAG,CAAC,CAAC,CAAC;AAC5E,CAAC;AAED;;AAEG;AACH,SAAS,aAAa,CAAC,KAAa,EAAA;AAClC,IAAA,OAAO,aAAa,CAAC,KAAK,CAAC,IAAI,cAAc,EAAE,CAAC;AAClD,CAAC;AAED;;AAEG;AACH,SAAS,cAAc,CAAC,KAAa,EAAA;AACnC,IAAA,MAAM,SAAS,GAAoB,IAAI,KAAK,CAAC,KAAK,CAAC,CAAC;IACpD,KAAK,IAAI,CAAC,GAAG,CAAC,EAAE,CAAC,GAAG,KAAK,EAAE,CAAC,EAAE,EAAE;QAC9B,SAAS,CAAC,CAAC,CAAC,GAAG,aAAa,CAAC,CAAC,CAAC,IAAI,cAAc,EAAE,CAAC;AACrD,KAAA;AACD,IAAA,OAAO,SAAS,CAAC;AACnB;;ACnGA,MAGa,YAAY,CAAA;IACf,oBAAoB,GAAiB,EAAE,CAAC;AACzC,IAAA,mBAAmB,GAAG,IAAI,eAAe,CAAe,EAAE,CAAC,CAAC;AAEnE,IAAA,WAAA,GAAA,GAAiB;AAEjB,IAAA,sBAAsB,CAAC,OAAqB,EAAA;AAC1C,QAAA,IAAI,CAAC,oBAAoB,GAAG,OAAO,CAAC;AACpC,QAAA,IAAI,CAAC,mBAAmB,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC;KACxC;IAED,sBAAsB,GAAA;QACpB,OAAO,IAAI,CAAC,oBAAoB,CAAC;KAClC;0HAbU,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,UAAA,EAAA,CAAA,CAAA;AAAZ,uBAAA,OAAA,KAAA,GAAA,EAAA,CAAA,qBAAA,CAAA,EAAA,UAAA,EAAA,QAAA,EAAA,OAAA,EAAA,QAAA,EAAA,QAAA,EAAA,EAAA,EAAA,IAAA,EAAA,YAAY,cAFX,MAAM,EAAA,CAAA,CAAA;;2FAEP,YAAY,EAAA,UAAA,EAAA,CAAA;kBAHxB,UAAU;AAAC,YAAA,IAAA,EAAA,CAAA;AACV,oBAAA,UAAU,EAAE,MAAM;AACnB,iBAAA,CAAA;;;ACmCD,IAAK,UAIJ,CAAA;AAJD,CAAA,UAAK,UAAU,EAAA;AACb,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACP,IAAA,UAAA,CAAA,UAAA,CAAA,QAAA,CAAA,GAAA,CAAA,CAAA,GAAA,QAAM,CAAA;AACN,IAAA,UAAA,CAAA,UAAA,CAAA,SAAA,CAAA,GAAA,CAAA,CAAA,GAAA,SAAO,CAAA;AACT,CAAC,EAJI,UAAU,KAAV,UAAU,GAId,EAAA,CAAA,CAAA,CAAA;AAED,MAKa,kBAAkB,CAAA;AA2CnB,IAAA,OAAA,CAAA;AACA,IAAA,YAAA,CAAA;AA3CM,IAAA,IAAI,CAAuB;AAC3B,IAAA,QAAQ,CAA0B;AAClC,IAAA,MAAM,CAAU;IAChB,OAAO,GAAyB,EAAE,CAAC;AACnC,IAAA,SAAS,CAAoB;AAC7B,IAAA,MAAM,CAAU;AAChB,IAAA,MAAM,CAAU;AAChB,IAAA,OAAO,CAA8C;AAEpD,IAAA,UAAU,GAAwD,IAAI,YAAY,EAAE,CAAC;AACrF,IAAA,UAAU,GAAsD,IAAI,YAAY,EAAE,CAAC;AAE7F,IAAA,GAAG,CAAS;AACZ,IAAA,KAAK,CAAQ;AAEZ,IAAA,GAAG,GAAa;AACtB,QAAA,UAAU,EAAE,KAAK;AACjB,QAAA,UAAU,EAAE,CAAC;AACb,QAAA,cAAc,EAAE,KAAK;AACrB,QAAA,cAAc,EAAE,CAAC;AACjB,QAAA,mBAAmB,EAAE,EAAE;AACvB,QAAA,mBAAmB,EAAE,EAAE;AACvB,QAAA,YAAY,EAAE,KAAK;AACnB,QAAA,MAAM,EAAE,EAAE;AACV,QAAA,WAAW,EAAE,KAAK;AAClB,QAAA,MAAM,EAAE,EAAE;KACX,CAAC;IAEM,IAAI,GAAmB,EAAE,CAAC;AAElC;;AAEG;IACI,OAAO,cAAc,CAAC,MAAiD,EAAA;QAC5E,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC;KACxC;IAEM,OAAO,gBAAgB,CAAC,MAAiD,EAAA;QAC9E,OAAO,CAAC,KAAK,CAAC,OAAO,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;KAC1C;IAED,WACU,CAAA,OAAmB,EACnB,YAA0B,EAAA;QAD1B,IAAO,CAAA,OAAA,GAAP,OAAO,CAAY;QACnB,IAAY,CAAA,YAAA,GAAZ,YAAY,CAAc;KAC/B;IAEE,QAAQ,GAAA;AACb,QAAA,IAAI,CAAC,GAAG,GAAG,IAAI,CAAC,OAAO,CAAC,aAAa,CAAC,UAAU,CAAC,IAAI,CAAC,CAAC;QACvD,IAAI,CAAC,OAAO,EAAE,CAAC;QACf,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,IAAI,CAAC,YAAY,CAAC,mBAAmB,CAAC,SAAS,CAAC,CAAC,IAAI,IAAI,CAAC,YAAY,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC;KAC5F;AAEO,IAAA,YAAY,CAAC,OAAW,EAAA;QAC9B,IAAI,CAAC,OAAO,EAAE,CAAC;KAChB;IAED,SAAS,GAAA;AACP,QAAA,IAAI,CAAC,IAAI,CAAC,KAAK,EAAE;YACf,OAAO;AACR,SAAA;AACD,QAAA,IAAI,cAAc,GAAG,UAAU,CAAC,OAAO,CAAC;AACxC,QAAA,MAAM,UAAU,GAAG,CAAC,CAAa,KAAI;AACnC,YAAA,cAAc,GAAG,CAAC,GAAG,cAAc,GAAG,CAAC,GAAG,cAAc,CAAC;AAC3D,SAAC,CAAC;QAEF,IAAI,CAAC,CAAC,IAAI,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACvC,YAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YAExC,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,CAAC,CAAC,IAAI,CAAC,IAAI,CAAC;AAElC,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,UAAU,EAAE;AACzD,YAAA,IAAI,CAAC,GAAG,CAAC,UAAU,GAAG,IAAI,CAAC,IAAI,IAAI,IAAI,CAAC,IAAI,CAAC,MAAM,IAAI,CAAC,CAAC;AAEzD,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,QAAQ,KAAK,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;YAC/C,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC;AAE1C,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,cAAc,EAAE;AACrE,YAAA,IAAI,CAAC,GAAG,CAAC,cAAc,GAAG,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,IAAI,CAAC,CAAC;AAErE,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,KAAK,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;AACtG,YAAA,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;AAE9D,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,mBAAmB,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAC7G,IAAI,CAAC,GAAG,CAAC,mBAAmB,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC,CAAC;AAErE,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,YAAY,EAAE;YAC3C,IAAI,CAAC,GAAG,CAAC,YAAY,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;YAEtC,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;;AAGD,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAChG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;YAE1D,IAAI,CAAC,YAAY,EAAE,CAAC;AAEpB,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;QAED,IAAI,CAAC,CAAC,IAAI,CAAC,MAAM,KAAK,IAAI,CAAC,GAAG,CAAC,WAAW,EAAE;YAC1C,IAAI,CAAC,GAAG,CAAC,WAAW,GAAG,CAAC,CAAC,IAAI,CAAC,MAAM,CAAC;AAErC,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,IAAI,CAAC,WAAW,CAAC,CAAC,EAAE,IAAI,CAAC,GAAG,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,EAAE;YAChG,IAAI,CAAC,GAAG,CAAC,MAAM,GAAG,IAAI,CAAC,MAAM,CAAC,GAAG,CAAC,CAAC,IAAI,IAAI,CAAC,SAAS,CAAC,CAAC,CAAC,CAAC,CAAC;AAE1D,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,QAAQ,cAA4B;YAClC,KAAK,UAAU,CAAC,OAAO;gBACrB,MAAM;YACR,KAAK,UAAU,CAAC,MAAM;gBACpB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;YACR,KAAK,UAAU,CAAC,OAAO;gBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,MAAM;AACT,SAAA;KACF;AAED,IAAA,SAAS,CAAC,CAAQ,EAAA;AAChB,QAAA,IAAI,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,EAAE;AACpB,YAAA,OAAO,CAAC,GAAG,CAAC,CAAC,CAAC;AACf,SAAA;AACD,QAAA,OAAO,CAAC,CAAC;KACV;IAED,WAAW,CAAC,CAAQ,EAAE,CAAQ,EAAA;AAC5B,QAAA,OAAO,IAAI;eACN,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,KAAK,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC;gBACpC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,KAAK,CAAC,CAAC;AAC7B,gBAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,MAAM,CAAC;AAC5C,gBAAC,CAAC,KAAK,CAAC,OAAO,CAAC,CAAC,CAAC,IAAI,CAAC,CAAC,MAAM,CAAC,CAAC,CAAC,EAAE,CAAC,KAAK,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,CAAC,CAAC,MAAM,KAAK,CAAC,CAAC,CACpE;KACJ;AAED,IAAA,SAAS,CAAC,CAAQ,EAAA;AAChB,QAAA,MAAM,EAAE,GAAU;YAChB,eAAe,EAAE,CAAC,CAAC,eAAe;YAClC,WAAW,EAAE,CAAC,CAAC,WAAW;YAC1B,WAAW,EAAE,CAAC,CAAC,WAAW;YAC1B,cAAc,EAAE,CAAC,CAAC,cAAc;YAChC,UAAU,EAAE,CAAC,CAAC,UAAU;YACxB,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;YACpC,eAAe,EAAE,CAAC,CAAC,eAAe;YAClC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;YACpC,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;YAC5C,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;YACpC,WAAW,EAAE,CAAC,CAAC,WAAW;YAC1B,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;YACpC,cAAc,EAAE,CAAC,CAAC,cAAc;YAChC,yBAAyB,EAAE,CAAC,CAAC,yBAAyB;YACtD,qBAAqB,EAAE,CAAC,CAAC,qBAAqB;YAC9C,qBAAqB,EAAE,CAAC,CAAC,qBAAqB;YAC9C,UAAU,EAAE,CAAC,CAAC,UAAU;YACxB,oBAAoB,EAAE,CAAC,CAAC,oBAAoB;YAC5C,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;YACpC,gBAAgB,EAAE,CAAC,CAAC,gBAAgB;SACrC,CAAC;AAEF,QAAA,OAAO,EAAE,CAAC;KACX;IAED,WAAW,CAAC,CAAQ,EAAE,CAAQ,EAAA;AAC5B,QAAA,IAAI,CAAC,CAAC,KAAK,CAAC,CAAC,EAAE;AACb,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;QACD,OAAO,CAAC,CAAC,IAAI,IAAI;AACZ,gBAAC,CAAC,CAAC,eAAe,KAAK,CAAC,CAAC,eAAe,CAAC;AACzC,gBAAC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,CAAC;AACjC,gBAAC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,CAAC;AACjC,gBAAC,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,cAAc,CAAC;AACvC,gBAAC,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,CAAC;AAC/B,gBAAC,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC;AAC3C,gBAAC,CAAC,CAAC,eAAe,KAAK,CAAC,CAAC,eAAe,CAAC;AACzC,gBAAC,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC;AAC3C,gBAAC,CAAC,CAAC,oBAAoB,KAAK,CAAC,CAAC,oBAAoB,CAAC;AACnD,gBAAC,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC;AAC3C,gBAAC,CAAC,CAAC,WAAW,KAAK,CAAC,CAAC,WAAW,CAAC;AACjC,gBAAC,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC;AAC3C,gBAAC,CAAC,CAAC,cAAc,KAAK,CAAC,CAAC,cAAc,CAAC;AACvC,gBAAC,CAAC,CAAC,yBAAyB,KAAK,CAAC,CAAC,yBAAyB,CAAC;AAC7D,gBAAC,CAAC,CAAC,qBAAqB,KAAK,CAAC,CAAC,qBAAqB,CAAC;AACrD,gBAAC,CAAC,CAAC,qBAAqB,KAAK,CAAC,CAAC,qBAAqB,CAAC;AACrD,gBAAC,CAAC,CAAC,UAAU,KAAK,CAAC,CAAC,UAAU,CAAC;AAC/B,gBAAC,CAAC,CAAC,oBAAoB,KAAK,CAAC,CAAC,oBAAoB,CAAC;AACnD,gBAAC,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC;gBAC1C,CAAC,CAAC,gBAAgB,KAAK,CAAC,CAAC,gBAAgB,CAAC,CAC7C;KACJ;IAED,YAAY,GAAA;QACV,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,GAAG,EAAE,KAAK,KAAI;YACnC,IAAI,IAAI,CAAC,MAAM,IAAI,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,EAAE;AACrC,gBAAA,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,CAAC;AACxC,aAAA;AAAM,iBAAA;gBACL,MAAM,CAAC,MAAM,CAAC,GAAG,EAAE,SAAS,CAAC,IAAI,CAAC,SAAS,EAAE,KAAK,EAAE,GAAG,CAAC,IAAI,CAAC,MAAM,CAAC,EAAE,EAAE,GAAG,GAAG,EAAE,CAAC,CAAC;AACnF,aAAA;AACH,SAAC,CAAC,CAAC;KACJ;AAEM,IAAA,WAAW,CAAC,OAAsB,EAAA;AACvC,QAAA,IAAI,cAAc,GAAG,UAAU,CAAC,OAAO,CAAC;AACxC,QAAA,MAAM,UAAU,GAAG,CAAC,CAAa,KAAI;AACnC,YAAA,cAAc,GAAG,CAAC,GAAG,cAAc,GAAG,CAAC,GAAG,cAAc,CAAC;AAC3D,SAAC,CAAC;;AAIF,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,MAAM,CAAC,IAAI,OAAO,CAAC,IAAI,CAAC,YAAY,EAAE;YAC/D,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,IAAI,CAAC,YAAY,CAAC,CAAC;AAExD,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,UAAU,CAAC,IAAI,OAAO,CAAC,QAAQ,CAAC,YAAY,EAAE;YACvE,IAAI,CAAC,uBAAuB,CAAC,OAAO,CAAC,QAAQ,CAAC,YAAY,CAAC,CAAC;AAE5D,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,gBAAA,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,MAAM,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;AACtD,aAAA;AAED,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,QAAQ,CAAC,EAAE;YACpC,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,gBAAA,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,OAAO,CAAC,MAAM,CAAC,OAAO,GAAG,OAAO,CAAC,MAAM,CAAC,YAAY,CAAC;AACvE,gBAAA,IAAI,CAAC,KAAK,CAAC,cAAc,EAAE,CAAC;AAC7B,aAAA;AAED,YAAA,UAAU,CAAC,UAAU,CAAC,MAAM,CAAC,CAAC;AAC/B,SAAA;AAED,QAAA,IAAI,OAAO,CAAC,cAAc,CAAC,SAAS,CAAC,EAAE;AACrC,YAAA,UAAU,CAAC,UAAU,CAAC,OAAO,CAAC,CAAC;AAChC,SAAA;AAED,QAAA,QAAQ,cAA4B;YAClC,KAAK,UAAU,CAAC,MAAM;gBACpB,IAAI,CAAC,MAAM,EAAE,CAAC;gBACd,MAAM;YACR,KAAK,UAAU,CAAC,OAAO,CAAC;YACxB,KAAK,UAAU,CAAC,OAAO;gBACrB,IAAI,CAAC,OAAO,EAAE,CAAC;gBACf,MAAM;AACT,SAAA;KACF;IAEM,WAAW,GAAA;QAChB,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACrB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AACrB,SAAA;AACD,QAAA,IAAI,CAAC,IAAI,CAAC,OAAO,CAAC,CAAC,IAAI,CAAC,CAAC,WAAW,EAAE,CAAC,CAAC;KACzC;IAEM,MAAM,CAAC,QAAc,EAAE,IAAU,EAAA;QACtC,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,OAAO,IAAI,CAAC,KAAK,CAAC,MAAM,CAAC,QAAQ,EAAE,IAAI,CAAC,CAAC;AAC1C,SAAA;KACF;IAEM,WAAW,CAAC,KAAa,EAAE,MAAe,EAAA;QAC/C,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,MAAM,GAAG,MAAM,CAAC;AACjD,QAAA,IAAI,CAAC,KAAK,CAAC,MAAM,EAAE,CAAC;KACrB;AAEM,IAAA,eAAe,CAAC,KAAa,EAAA;QAClC,OAAO,IAAI,CAAC,KAAK,CAAC,cAAc,CAAC,KAAK,CAAC,CAAC,MAAM,CAAC;KAChD;IAEM,aAAa,GAAA;AAClB,QAAA,OAAO,IAAI,CAAC,KAAK,CAAC,aAAa,EAAE,CAAC;KACnC;IAEM,qBAAqB,GAAA;AAC1B,QAAA,MAAM,QAAQ,GAAG,IAAI,CAAC,WAAW,EAAE,CAAC;AAEpC,QAAA,MAAM,OAAO,GAAG,MAAM,CAAC,MAAM,CAAC,EAAE,EAAE,IAAI,CAAC,OAAO,CAAC,CAAC;AAChD,QAAA,IAAI,IAAI,CAAC,MAAM,KAAK,KAAK,EAAE;YACzB,OAAO,CAAC,MAAM,GAAG,EAAE,OAAO,EAAE,KAAK,EAAE,CAAC;AACrC,SAAA;;QAED,OAAO,CAAC,KAAK,GAAG,OAAO,CAAC,KAAK,IAAI,EAAE,CAAC;AACpC,QAAA,IAAI,CAAC,OAAO,CAAC,KAAK,CAAC,OAAO,EAAE;YAC1B,OAAO,CAAC,KAAK,CAAC,OAAO,GAAG,CAAC,KAAiB,EAAE,MAAY,KAAI;AAC1D,gBAAA,IAAI,MAAM,IAAI,CAAC,MAAM,CAAC,MAAM,EAAE;oBAC5B,OAAO;AACR,iBAAA;gBACD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1C,aAAC,CAAC;AACH,SAAA;AAED,QAAA,IAAI,CAAC,OAAO,CAAC,OAAO,EAAE;YACpB,OAAO,CAAC,OAAO,GAAG,CAAC,KAAkB,EAAE,MAAa,KAAI;gBACtD,IAAI,CAAC,UAAU,CAAC,IAAI,CAAC,EAAE,KAAK,EAAE,MAAM,EAAE,CAAC,CAAC;AAC1C,aAAC,CAAC;AACH,SAAA;AAED,QAAA,MAAM,aAAa,GAAG,IAAI,CAAC,UAAU,CAAC,OAAO,EAAE,IAAI,CAAC,YAAY,CAAC,sBAAsB,EAAE,CAAC,CAAC;AAE3F,QAAA,MAAM,WAAW,GAA+B;YAC9C,IAAI,EAAE,IAAI,CAAC,SAAS;AACpB,YAAA,IAAI,EAAE;AACJ,gBAAA,MAAM,EAAE,IAAI,CAAC,MAAM,IAAI,EAAE;gBACzB,QAAQ;AACT,aAAA;YACD,OAAO,EAAE,IAAI,CAAC,OAAO;AACrB,YAAA,OAAO,EAAE,aAAa;SACvB,CAAC;AAEF,QAAA,OAAO,WAAW,CAAC;KACpB;IAEM,eAAe,CAAC,GAAW,gCAA6B;AAC7D,QAAA,MAAM,WAAW,GAAG,IAAI,CAAC,qBAAqB,EAAE,CAAC;QACjD,OAAO,IAAI,OAAO,CAAC,KAAK,CAAC,GAAG,EAAE,WAAW,CAAC,CAAC;KAC5C;AAED,IAAA,UAAU,CAAC,OAAY,EAAE,SAAc,EAAE,QAAgB,CAAC,EAAA;QACxD,IAAI,KAAK,KAAK,CAAC,EAAE;AACf,YAAA,OAAO,GAAG,CAAC,CAAC,SAAS,CAAC,OAAO,CAAC,CAAC;AAChC,SAAA;QACD,MAAM,YAAY,GAAG,MAAM,CAAC,IAAI,CAAC,SAAS,CAAC,CAAC;AAC5C,QAAA,YAAY,CAAC,OAAO,CAAC,GAAG,IAAG;YACzB,IAAI,KAAK,CAAC,OAAO,CAAC,SAAS,CAAC,GAAG,CAAC,CAAC,EAAE;AACjC,gBAAA,MAAM,aAAa,GAAG,OAAO,CAAC,GAAG,CAAC,CAAC;AACnC,gBAAA,IAAI,aAAa,EAAE;AACjB,oBAAA,aAAa,CAAC,OAAO,CAAC,CAAC,IAAG;AACxB,wBAAA,IAAI,CAAC,UAAU,CAAC,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AACnD,qBAAC,CAAC,CAAC;AACJ,iBAAA;AACF,aAAA;iBAAM,IAAI,QAAQ,SAAS,CAAC,GAAG,CAAC,CAAC,KAAK,QAAQ,EAAE;AAC/C,gBAAA,IAAI,EAAE,GAAG,IAAI,OAAO,CAAC,EAAE;AACrB,oBAAA,OAAO,CAAC,GAAG,CAAC,GAAG,EAAE,CAAC;AACnB,iBAAA;AACD,gBAAA,IAAI,CAAC,UAAU,CAAC,OAAO,CAAC,GAAG,CAAC,EAAE,SAAS,CAAC,GAAG,CAAC,EAAE,KAAK,GAAG,CAAC,CAAC,CAAC;AAC1D,aAAA;AAAM,iBAAA;gBACL,OAAO,CAAC,GAAG,CAAC,GAAG,SAAS,CAAC,GAAG,CAAC,CAAC;AAC/B,aAAA;AACH,SAAC,CAAC,CAAC;QACH,IAAI,KAAK,KAAK,CAAC,EAAE;AACf,YAAA,OAAO,OAAO,CAAC;AAChB,SAAA;KACF;AAEO,IAAA,gBAAgB,CAAC,KAAY,EAAA;AACnC,QAAA,OAAO,KAAK,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC;KAC7B;AAEO,IAAA,SAAS,CAAC,KAAY,EAAA;QAC5B,IAAI,CAAC,KAAK,EAAE;AACV,YAAA,OAAO,IAAI,CAAC;AACb,SAAA;AACD,QAAA,IAAI,IAAI,CAAC,gBAAgB,CAAC,KAAK,CAAC,EAAE;AAChC,YAAA,OAAO,KAAK,CAAC,IAAI,CAAC,GAAG,CAAC,CAAC;AACxB,SAAA;AAAM,aAAA;AACL,YAAA,OAAO,KAAK,CAAC;AACd,SAAA;KACF;AAEO,IAAA,uBAAuB,CAAC,QAAiC,EAAA;AAC/D,QAAA,IAAI,CAAC,IAAI,GAAG,IAAI,CAAC,QAAQ,CAAC,GAAG,CAAC,CAAC,IAAI,CAAC,CAAC,IAAI,CAAC,CAAC;QAC3C,IAAI,IAAI,CAAC,KAAK,EAAE;YACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,QAAQ,CAAC;AACrC,SAAA;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAEO,IAAA,uBAAuB,CAAC,aAAmC,EAAA;AACjE,QAAA,IAAI,IAAI,CAAC,cAAc,CAAC,aAAa,CAAC,EAAE;AACtC,YAAA,IAAI,IAAI,CAAC,QAAQ,IAAI,aAAa,CAAC,MAAM,KAAK,IAAI,CAAC,QAAQ,CAAC,MAAM,EAAE;gBAClE,IAAI,CAAC,QAAQ,CAAC,OAAO,CAAC,CAAC,OAAO,EAAE,CAAS,KAAI;AAC3C,oBAAA,OAAO,CAAC,IAAI,GAAG,aAAa,CAAC,CAAC,CAAC,CAAC;AAClC,iBAAC,CAAC,CAAC;AACJ,aAAA;AAAM,iBAAA;AACL,gBAAA,IAAI,CAAC,QAAQ,GAAG,aAAa,CAAC,GAAG,CAAC,CAAC,IAAc,EAAE,KAAa,KAAI;oBAClE,OAAO,EAAE,IAAI,EAAE,KAAK,EAAE,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,MAAM,CAAC,KAAK,CAAC,CAAC,IAAI,CAAS,MAAA,EAAA,KAAK,CAAE,CAAA,EAAE,CAAC;AACjF,iBAAC,CAAC,CAAC;gBACH,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC1C,iBAAA;AACF,aAAA;AACF,SAAA;AAAM,aAAA;AACL,YAAA,IAAI,CAAC,IAAI,CAAC,QAAQ,EAAE;gBAClB,IAAI,CAAC,QAAQ,GAAG,CAAC,EAAE,IAAI,EAAE,aAAa,EAAE,CAAC,CAAC;gBAC1C,IAAI,IAAI,CAAC,KAAK,EAAE;oBACd,IAAI,CAAC,KAAK,CAAC,IAAI,CAAC,QAAQ,GAAG,IAAI,CAAC,QAAQ,CAAC;AAC1C,iBAAA;AACF,aAAA;AAAM,iBAAA;gBACL,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,CAAC,IAAI,GAAG,aAAa,CAAC;gBACtC,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,CAAC;AACzB,aAAA;AACF,SAAA;QACD,IAAI,CAAC,YAAY,EAAE,CAAC;KACrB;AAEO,IAAA,cAAc,CAAC,IAA0B,EAAA;QAC/C,OAAO,KAAK,CAAC,OAAO,CAAC,IAAI,CAAC,CAAC,CAAC,CAAC,CAAC;KAC/B;IAEO,WAAW,GAAA;QACjB,IAAI,CAAC,IAAI,CAAC,QAAQ,IAAI,CAAC,IAAI,CAAC,IAAI,EAAE;YAChC,MAAM,IAAI,KAAK,CAAC,CAAA,mFAAA,EAAsF,IAAI,CAAC,SAAS,CAAE,CAAA,CAAC,CAAC;AACzH,SAAA;;QAGD,IAAI,IAAI,CAAC,QAAQ,EAAE;AACjB,YAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC;YAC5C,OAAO,IAAI,CAAC,QAAQ,CAAC;AACtB,SAAA;QAED,IAAI,IAAI,CAAC,IAAI,EAAE;AACb,YAAA,IAAI,CAAC,uBAAuB,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;YACxC,OAAO,IAAI,CAAC,QAAQ,CAAC;AACtB,SAAA;KACF;IAEO,OAAO,GAAA;;;;;QAMb,IAAI,IAAI,CAAC,KAAK,EAAE;AACd,YAAA,IAAI,CAAC,KAAK,CAAC,OAAO,EAAE,CAAC;AACrB,YAAA,IAAI,CAAC,KAAK,GAAG,KAAK,CAAC,CAAC;AACrB,SAAA;QACD,IAAI,IAAI,CAAC,GAAG,EAAE;AACZ,YAAA,IAAI,CAAC,KAAK,GAAG,IAAI,CAAC,eAAe,CAAC,IAAI,CAAC,GAAG,0BAAyB,CAAC;AACrE,SAAA;KACF;0HA7cU,kBAAkB,EAAA,IAAA,EAAA,CAAA,EAAA,KAAA,EAAA,EAAA,CAAA,UAAA,EAAA,EAAA,EAAA,KAAA,EAAAA,YAAA,EAAA,CAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,SAAA,EAAA,CAAA,CAAA;8GAAlB,kBAAkB,EAAA,QAAA,EAAA,mBAAA,EAAA,MAAA,EAAA,EAAA,IAAA,EAAA,MAAA,EAAA,QAAA,EAAA,UAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,SAAA,EAAA,WAAA,EAAA,MAAA,EAAA,QAAA,EAAA,MAAA,EAAA,QAAA,EAAA,OAAA,EAAA,SAAA,EAAA,EAAA,OAAA,EAAA,EAAA,UAAA,EAAA,YAAA,EAAA,UAAA,EAAA,YAAA,EAAA,EAAA,QAAA,EAAA,CAAA,YAAA,CAAA,EAAA,aAAA,EAAA,IAAA,EAAA,QAAA,EAAA,EAAA,EAAA,CAAA,CAAA;;2FAAlB,kBAAkB,EAAA,UAAA,EAAA,CAAA;kBAL9B,SAAS;AAAC,YAAA,IAAA,EAAA,CAAA;;AAET,oBAAA,QAAQ,EAAE,mBAAmB;AAC7B,oBAAA,QAAQ,EAAE,YAAY;AACvB,iBAAA,CAAA;yHAEiB,IAAI,EAAA,CAAA;sBAAnB,KAAK;gBACU,QAAQ,EAAA,CAAA;sBAAvB,KAAK;gBACU,MAAM,EAAA,CAAA;sBAArB,KAAK;gBACU,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBACU,SAAS,EAAA,CAAA;sBAAxB,KAAK;gBACU,MAAM,EAAA,CAAA;sBAArB,KAAK;gBACU,MAAM,EAAA,CAAA;sBAArB,KAAK;gBACU,OAAO,EAAA,CAAA;sBAAtB,KAAK;gBAEW,UAAU,EAAA,CAAA;sBAA1B,MAAM;gBACU,UAAU,EAAA,CAAA;sBAA1B,MAAM;;;AC5DT,MAUa,YAAY,CAAA;0HAAZ,YAAY,EAAA,IAAA,EAAA,EAAA,EAAA,MAAA,EAAA,EAAA,CAAA,eAAA,CAAA,QAAA,EAAA,CAAA,CAAA;2HAAZ,YAAY,EAAA,YAAA,EAAA,CARrB,kBAAkB,CAAA,EAAA,OAAA,EAAA,CAKlB,kBAAkB,CAAA,EAAA,CAAA,CAAA;2HAGT,YAAY,EAAA,CAAA,CAAA;;2FAAZ,YAAY,EAAA,UAAA,EAAA,CAAA;kBAVxB,QAAQ;AAAC,YAAA,IAAA,EAAA,CAAA;AACR,oBAAA,YAAY,EAAE;wBACZ,kBAAkB;AACnB,qBAAA;AACD,oBAAA,OAAO,EAAE,EACR;AACD,oBAAA,OAAO,EAAE;wBACP,kBAAkB;AACnB,qBAAA;AACF,iBAAA,CAAA;;;ACZD;;AAEG;;ACFH;;AAEG;;;;"}